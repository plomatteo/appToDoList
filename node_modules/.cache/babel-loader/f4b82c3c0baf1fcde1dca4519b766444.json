{"ast":null,"code":"var _jsxFileName = \"/Users/matteopolo/reactProjects/todolist/src/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormTask = props => {\n  _s();\n\n  const [titleInput, setTitleInput] = useState('');\n  const [descriptionInput, setDescriptionInput] = useState('');\n\n  const handleChangeTitle = e => {\n    setTitleInput(e.target.value);\n  };\n\n  const handleChangeDescription = e => {\n    setDescriptionInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      title: titleInput,\n      description: descriptionInput\n    });\n    setTitleInput('');\n    setDescriptionInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-task\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskTitle\",\n          children: \"Task title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placehonder: \"Add to do title\",\n          name: \"taskTitle\",\n          id: \"taskTitle\",\n          value: titleInput,\n          onChange: handleChangeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskDescription\",\n          children: \"Task description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placehonder: \"Add to do description\",\n          name: \"taskDescription\",\n          id: \"taskDescription\",\n          onChange: handleChangeDescription,\n          value: descriptionInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(FormTask, \"aRkZ2C6TBbMg8oUDsHCJ0cQo6l8=\");\n\n_c = FormTask;\nexport default FormTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormTask\");","map":{"version":3,"sources":["/Users/matteopolo/reactProjects/todolist/src/form.js"],"names":["React","useState","FormTask","props","titleInput","setTitleInput","descriptionInput","setDescriptionInput","handleChangeTitle","e","target","value","handleChangeDescription","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","title","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACK,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CAAC,EAAD,CAAxD;;AAEA,QAAMO,iBAAiB,GAAGC,CAAC,IAAI;AAC3BJ,IAAAA,aAAa,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFD;;AAGA,QAAMC,uBAAuB,GAAGH,CAAC,IAAI;AACjCF,IAAAA,mBAAmB,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB;AACH,GAFD;;AAKA,QAAME,YAAY,GAAGJ,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACK,cAAF;AACAX,IAAAA,KAAK,CAACY,QAAN,CACI;AACIC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,KAAzB,CADR;AAEIC,MAAAA,KAAK,EAAEhB,UAFX;AAGIiB,MAAAA,WAAW,EAAEf;AAHjB,KADJ;AAOAD,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACH,GAXD;;AAcA,sBACI;AAAA,2BACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,QAAQ,EAAEM,YAAtC;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,iBAA/B;AAAiD,UAAA,IAAI,EAAC,WAAtD;AAAkE,UAAA,EAAE,EAAC,WAArE;AAAiF,UAAA,KAAK,EAAET,UAAxF;AAAoG,UAAA,QAAQ,EAAEI;AAA9G;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,uBAA/B;AAAuD,UAAA,IAAI,EAAC,iBAA5D;AAA8E,UAAA,EAAE,EAAC,iBAAjF;AAAmG,UAAA,QAAQ,EAAEI,uBAA7G;AAAsI,UAAA,KAAK,EAAEN;AAA7I;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA,kBAAyB;AAAzB;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAeH,CAzCD;;GAAMJ,Q;;KAAAA,Q;AA2CN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\n\nconst FormTask = (props) => {\n    const [titleInput, setTitleInput] = useState('');\n    const [descriptionInput, setDescriptionInput] = useState('');\n\n    const handleChangeTitle = e => {\n        setTitleInput(e.target.value);\n    };\n    const handleChangeDescription = e => {\n        setDescriptionInput(e.target.value);\n    };\n\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        props.onSubmit(\n            {\n                id: Math.floor(Math.random()*10000),\n                title: titleInput,\n                description: descriptionInput,\n            }\n        );\n        setTitleInput('');\n        setDescriptionInput('');\n    }\n\n\n    return (\n        <>\n            <form className=\"form-task\" onSubmit={handleSubmit}>\n                <div className=\"form-field\">\n                    <label htmlFor=\"taskTitle\">Task title</label>\n                    <input type=\"text\" placehonder=\"Add to do title\" name=\"taskTitle\" id=\"taskTitle\" value={titleInput} onChange={handleChangeTitle}/>\n                </div>\n                <div className=\"form-field\">\n                    <label htmlFor=\"taskDescription\">Task description</label>\n                    <input type=\"text\" placehonder=\"Add to do description\" name=\"taskDescription\" id=\"taskDescription\" onChange={handleChangeDescription} value={descriptionInput} />\n                </div>\n                <button className=\"btn\">{\"Add task\"}</button>\n            </form>\n        </>\n    );\n};\n\nexport default FormTask;"]},"metadata":{},"sourceType":"module"}