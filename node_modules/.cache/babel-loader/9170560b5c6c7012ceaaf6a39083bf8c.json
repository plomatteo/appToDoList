{"ast":null,"code":"var _jsxFileName = \"/Users/matteopolo/reactProjects/todolist/src/App.js\",\n    _s = $RefreshSig$();\n\nimport List from \"./List\";\nimport data from \"./data\";\nimport { useState } from \"react\";\nimport FormTask from \"./form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [task, setTask] = useState(data);\n\n  const insertItem = newItem => {\n    setTask(oldValue => oldValue.concat(newItem));\n  };\n\n  const removeItem = id => {\n    setTask(oldValue => oldValue.filter(value => value.id !== id));\n  };\n\n  const reloadAllItem = () => {\n    setTask(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"var(--bg-blue)\"\n          },\n          children: \"To do list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"taskTitle\",\n              children: \"Task title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"taskTitle\",\n              id: \"taskTitle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"taskDescription\",\n              children: \"Task description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"taskDescription\",\n              id: \"taskDescription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => insertItem({\n              id: 6,\n              title: \"Mail urgente\",\n              description: \"Inviare urgente al capo\"\n            }),\n            children: \"Add task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"people-list\",\n          children: /*#__PURE__*/_jsxDEV(List, {\n            data: task,\n            removeItem: removeItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-reset\",\n            onClick: reloadAllItem,\n            children: [\" \", \"Reload default task\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-delete\",\n            onClick: () => setTask([]),\n            children: [\" \", \"All done\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"h3/izANrABCVBPbMyfCLDg3Og1Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/matteopolo/reactProjects/todolist/src/App.js"],"names":["List","data","useState","FormTask","App","task","setTask","insertItem","newItem","oldValue","concat","removeItem","id","filter","value","reloadAllItem","color","title","description"],"mappings":"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","sourcesContent":["import List from \"./List\";\nimport data from \"./data\";\nimport { useState } from \"react\";\nimport FormTask from \"./form\";\n\n\nfunction App() {\n  let [task, setTask] = useState(data);\n\n\n\n  const insertItem = (newItem) => {\n    setTask((oldValue)=>oldValue.concat(newItem));\n  };\n\n  const removeItem = (id) => {\n    setTask((oldValue) => oldValue.filter((value) => value.id !== id));\n  };\n\n  const reloadAllItem = () => {\n    setTask(data);\n  };\n\n  return (\n    <>\n      <section>\n        <div className=\"container\">\n          <h2 style={{ color: \"var(--bg-blue)\" }}>To do list</h2>\n\n          <form action=\"\">\n            <div className=\"row\">\n                <label htmlFor=\"taskTitle\">Task title</label>\n                <input type=\"text\" name=\"taskTitle\" id=\"taskTitle\" />\n            </div>\n            <div className=\"row\">\n                <label htmlFor=\"taskDescription\">Task description</label>\n                <input type=\"text\" name=\"taskDescription\" id=\"taskDescription\" />\n            </div>\n            <button className=\"btn\" onClick={() => insertItem({\n        id: 6,\n        title: \"Mail urgente\",\n        description: \"Inviare urgente al capo\",\n      })}>{\"Add task\"}</button>\n        </form>\n        \n \n \n          <div className=\"people-list\">\n            <List data={task} removeItem={removeItem} />\n          </div>\n          <div className=\"btn-group\">\n            <button className=\"btn btn-reset\" onClick={reloadAllItem}>\n              {\" \"}\n              Reload default task{\" \"}\n            </button>\n            <button className=\"btn btn-delete\" onClick={() => setTask([])}>\n              {\" \"}\n              All done\n            </button>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}