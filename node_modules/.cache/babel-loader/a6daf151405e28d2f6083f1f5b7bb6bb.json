{"ast":null,"code":"var _jsxFileName = \"/Users/matteopolo/reactProjects/todolist/src/App.js\",\n    _s = $RefreshSig$();\n\nimport List from \"./List\";\nimport data from \"./data\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [people, setPeople] = useState(data);\n\n  const removeItem = id => {\n    setPeople(oldValue => oldValue.filter(value => value.id !== id));\n  };\n\n  const reloadAllItem = () => {\n    setPeople(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"var(--bg-blue)\"\n          },\n          children: \"To do list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"taskTitle\",\n              children: \"Task title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"taskTitle\",\n              id: \"taskTitle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"taskDescription\",\n              children: \"Task description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"taskDescription\",\n              id: \"taskDescription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            children: \"Add task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"people-list\",\n          children: /*#__PURE__*/_jsxDEV(List, {\n            data: people,\n            removeItem: removeItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-reset\",\n            onClick: reloadAllItem,\n            children: [\" \", \"Default task\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-delete\",\n            onClick: () => setPeople([]),\n            children: [\" \", \"Delete all\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"1LkHEtj2RWqZMtew8JQSoeuNX/M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/matteopolo/reactProjects/todolist/src/App.js"],"names":["List","data","useState","App","people","setPeople","removeItem","id","oldValue","filter","value","reloadAllItem","color"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAACD,IAAD,CAApC;;AAEA,QAAMK,UAAU,GAAIC,EAAD,IAAQ;AACzBF,IAAAA,SAAS,CAAEG,QAAD,IAAcA,QAAQ,CAACC,MAAT,CAAiBC,KAAD,IAAWA,KAAK,CAACH,EAAN,KAAaA,EAAxC,CAAf,CAAT;AACD,GAFD;;AAIA,QAAMI,aAAa,GAAG,MAAM;AAC1BN,IAAAA,SAAS,CAACJ,IAAD,CAAT;AACD,GAFD;;AAIA,sBACE;AAAA,2BACA;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,KAAK,EAAE;AAAEW,YAAAA,KAAK,EAAE;AAAT,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,MAAM,EAAC,EAAb;AAAA,kCACA;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACF;AAAO,cAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADE,eAEF;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,IAAI,EAAC,WAAxB;AAAoC,cAAA,EAAE,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,oBAFE;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAKA;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACA;AAAO,cAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,IAAI,EAAC,iBAAxB;AAA0C,cAAA,EAAE,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,eASA;AAAQ,YAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAaE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAER,MAAZ;AAAoB,YAAA,UAAU,EAAEE;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAbF,eAgBE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,eAAlB;AAAkC,YAAA,OAAO,EAAEK,aAA3C;AAAA,uBACG,GADH,kBAEe,GAFf;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAQ,YAAA,SAAS,EAAC,gBAAlB;AAAmC,YAAA,OAAO,EAAE,MAAMN,SAAS,CAAC,EAAD,CAA3D;AAAA,uBACG,GADH;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAkCD;;GA7CQF,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import List from \"./List\";\nimport data from \"./data\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [people, setPeople] = useState(data);\n\n  const removeItem = (id) => {\n    setPeople((oldValue) => oldValue.filter((value) => value.id !== id));\n  };\n\n  const reloadAllItem = () => {\n    setPeople(data);\n  };\n\n  return (\n    <>\n    <section>\n      <div className=\"container\">\n        <h2 style={{ color: \"var(--bg-blue)\" }}>To do list</h2>\n        <form action=\"\">\n        <div className=\"row\">\n      <label htmlFor=\"taskTitle\">Task title</label>\n      <input type=\"text\" name=\"taskTitle\" id=\"taskTitle\" />\n      </div>\n        <div className=\"row\">\n        <label htmlFor=\"taskDescription\">Task description</label>\n        <input type=\"text\" name=\"taskDescription\" id=\"taskDescription\" /> \n        </div>\n        <button className=\"btn\">Add task</button>\n      </form>\n        <div className=\"people-list\">\n          <List data={people} removeItem={removeItem} />\n        </div>\n        <div className=\"btn-group\">\n          <button className=\"btn btn-reset\" onClick={reloadAllItem}>\n            {\" \"}\n            Default task{\" \"}\n          </button>\n\n          <button className=\"btn btn-delete\" onClick={() => setPeople([])}>\n            {\" \"}\n            Delete all\n          </button>\n        </div>\n      </div>\n    </section>\n  </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}